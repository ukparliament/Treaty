@model UKParliament.UKParliamentDataView
@{
    var Graph = Model.Graph;
    var Parameters = (ProcedureQueryParameters)Model.QueryParameters;


    ViewData["Title"] = Model.Graph.TreatyCollection.FirstOrDefault().WorkPackagedThingHasWorkPackage.WorkPackageHasProcedure.ProcedureName;
    List<SelectListItem> SeriesMembershipTypes = new List<SelectListItem>();
    SeriesMembershipTypes.Add(new SelectListItem {
        Value = "CountrySeriesMembership",
        Text = "Country series",
        Selected = "CountrySeriesMembership" == Parameters.SeriesMembershipType.ToString()
    });
    SeriesMembershipTypes.Add(new SelectListItem {
        Value = "EuropeanUnionSeriesMembership",
        Text = "European Union series",
        Selected = "EuropeanUnionSeriesMembership" == Parameters.SeriesMembershipType.ToString()
    });
    SeriesMembershipTypes.Add(new SelectListItem {
        Value = "MiscellaneousSeriesMembership",
        Text = "Miscellaneous series",
        Selected = "MiscellaneousSeriesMembership" == Parameters.SeriesMembershipType.ToString()
    });

    int totalNumberOfTreaties = Model.Graph.TreatyCollection.Count();
    IEnumerable<Model.Treaty> treaties = Model.Graph.TreatyCollection.Where(treaty =>
    {
        var filterTreaty = false;
        var hasLeadGovernmentOrganisation = false;
        var hasSeriesMembership = false;
        var hasProcedureStep = false;
        if (Parameters.Current && treaty.WorkPackagedThingHasWorkPackage.WorkPackageHasBusinessItem.Any(businessItem => businessItem.BusinessItemHasProcedureStep.Any(procedureStep => UKParliament.GraphHelper.TreatyProcedureEndStep.Contains(procedureStep.Id))))
        {
            filterTreaty = true;
        }
        if (Parameters.LeadGovernmentOrganisation?.Count() > 0 && !string.IsNullOrEmpty(Parameters.LeadGovernmentOrganisation.FirstOrDefault()))
        {
            foreach (var leadGovernmentOrganisationId in Parameters.LeadGovernmentOrganisation)
            {
                if ((treaty.TreatyHasLeadGovernmentOrganisation != null && treaty.TreatyHasLeadGovernmentOrganisation.Id == leadGovernmentOrganisationId) || leadGovernmentOrganisationId == "all")
                {
                    hasLeadGovernmentOrganisation = true;
                }
            }
            filterTreaty = filterTreaty || !hasLeadGovernmentOrganisation;
        }
        if (Parameters.SeriesMembershipType != null)
        {
            if (treaty.TreatyHasCountrySeriesMembership != null && Parameters.SeriesMembershipType == ProcedureQueryParameters.SeriesMembershipTypeEnum.CountrySeriesMembership)
            {
                hasSeriesMembership = true;
            }
            if (treaty.TreatyHasEuropeanUnionSeriesMembership != null && Parameters.SeriesMembershipType == ProcedureQueryParameters.SeriesMembershipTypeEnum.EuropeanUnionSeriesMembership)
            {
                hasSeriesMembership = true;
            }
            if (treaty.TreatyHasMiscellaneousSeriesMembership != null && Parameters.SeriesMembershipType == ProcedureQueryParameters.SeriesMembershipTypeEnum.MiscellaneousSeriesMembership)
            {
                hasSeriesMembership = true;
            }
            filterTreaty = filterTreaty || !hasSeriesMembership;
        }
        if (Parameters.ProcedureStep?.Count() > 0)
        {
            foreach (var procedureStepId in Parameters.ProcedureStep)
            {
                if (treaty.WorkPackagedThingHasWorkPackage.WorkPackageHasBusinessItem.Any(businessItem => businessItem.BusinessItemHasProcedureStep.Any(procedureStep => procedureStep.Id == procedureStepId)))
                {
                    hasProcedureStep = true;
                }
            }
            filterTreaty = filterTreaty || !hasProcedureStep;
        }
        return !filterTreaty;
    });
}

<div class="section--primary">
    <div class="container">
        <small><a asp-controller="Procedure" asp-action="Index">@Localizer["Category"]</a></small>
        <h1><span>@ViewData["Title"]</span></h1>
        <form id="search" method="get" asp-action="Index" asp-controller="Treaty" asp-antiforgery="false">
            <fieldset>
                <div class="input-group">
                    <label for="search-box">Full text search</label>
                    <input id="search-box" autocomplete="off" type="search" name="q" value="@ViewBag.SearchText">
                </div>
                <div class="input-group">
                    @if (Parameters.Current)
                    {
                        <input type="checkbox" name="current" value="true" id="current" checked />
                    }
                    else
                    {
                        <input type="checkbox" name="current" value="true" id="current" />
                    }
                    <label for="current">Currently before Parliament</label>
                </div>
                <div class="input-group">
                    <label for="leadGovernmentOrganisation">Lead government organisation</label>
                    <select id="leadGovernmentOrganisation" name="leadGovernmentOrganisation" asp-items="Model.Graph.GovernmentOrganisationCollection.OrderBy(x => x.GroupName).Select(governmentOrganisation => new SelectListItem { Text = governmentOrganisation.GroupName, Value = governmentOrganisation.Id, Selected = governmentOrganisation.Id == ViewBag.LeadGovernmentOrganisation })">
                        <option value="">All</option>
                    </select>
                </div>
                <div class="input-group">
                    <label for="seriesMembershipType">Series membership type</label>
                    <select id="seriesMembershipType" name="seriesMembershipType" asp-items="SeriesMembershipTypes">
                        <option value="">All</option>
                    </select>
                </div>
            </fieldset>
            <input class="btn--primary" type="submit" value="Search">
        </form>
        <dl class="meta">
            <dt>Total results</dt>
            <dd>@treaties.Count()</dd>
            <dt>Order</dt>
            <dd>Reverse chronological by laid date</dd>
            @if (Parameters.Current || Parameters.LeadGovernmentOrganisation?.Count() > 0 || Parameters.SeriesMembershipType != null || Parameters.ProcedureStep?.Count() > 0)
            {
                <dt>Filters</dt>
                <dd>
                    <ul class="list--inline">
                        @if (Parameters.Current)
                        {
                            <li>
                                <a aria-label="Remove current filter" class="hint theme--grey-4 remove-hint" asp-controller="Treaty" asp-action="Index" asp-route-leadGovernmentOrganisation="@ViewBag.LeadGovernmentOrganisation" asp-route-seriesMembershipType="@ViewBag.SeriesMembershipType" asp-route-procedureStep="@ViewBag.ProcedureStep"><span></span>Current</a>
                            </li>
                        }
                        @foreach (var leadGovernmentOrganisationId in @ViewBag.LeadGovernmentOrganisation)
                        {
                            @foreach (var leadGovernmentOrganisation in Model.Graph.GovernmentOrganisationCollection.Where(x => x.Id == leadGovernmentOrganisationId))
                            {
                                <li>
                                    <a aria-label="Remove lead government organisation filter" class="hint theme--grey-4 remove-hint" asp-controller="Treaty" asp-action="Index" asp-route-current="@ViewBag.Current" asp-route-seriesMembershipType="@ViewBag.SeriesMembershipType" asp-route-procedureStep="@ViewBag.ProcedureStep"><span></span>@leadGovernmentOrganisation.GroupName</a>
                                </li>
                            }
                        }
                        @foreach (var seriesMembershipType in @ViewBag.SeriesMembershipType)
                        {
                            @if (seriesMembershipType == "CountrySeriesMembership")
                            {
                                <li>
                                    <a aria-label="Remove series membership filter" class="hint theme--grey-4 remove-hint" asp-controller="Treaty" asp-action="Index" asp-route-current="@ViewBag.Current" asp-route-leadGovernmentOrganisation="@ViewBag.LeadGovernmentOrganisation" asp-route-procedureStep="@ViewBag.ProcedureStep"><span></span>Country series</a>
                                </li>
                            }
                            @if (seriesMembershipType == "MiscellaneousSeriesMembership")
                            {
                                <li>
                                    <a aria-label="Remove series membership filter" class="hint theme--grey-4 remove-hint" asp-controller="Treaty" asp-action="Index" asp-route-current="@ViewBag.Current" asp-route-leadGovernmentOrganisation="@ViewBag.LeadGovernmentOrganisation" asp-route-procedureStep="@ViewBag.ProcedureStep"><span></span>Miscellaneous series</a>
                                </li>
                            }
                            @if (seriesMembershipType == "EuropeanUnionSeriesMembership")
                            {
                                <li>
                                    <a aria-label="Remove series membership filter" class="hint theme--grey-4 remove-hint" asp-controller="Treaty" asp-action="Index" asp-route-current="@ViewBag.Current" asp-route-leadGovernmentOrganisation="@ViewBag.LeadGovernmentOrganisation" asp-route-procedureStep="@ViewBag.ProcedureStep"><span></span>European Union series</a>
                                </li>
                            }
                        }
                        @foreach (var procedureStepId in @ViewBag.ProcedureStep)
                        {
                            @foreach (var procedureStep in Model.Graph.ProcedureStepCollection.Where(procedureStep => procedureStep.Id == procedureStepId))
                            {
                                <li>
                                    <a aria-label="Remove procedure step filter" class="hint theme--grey-4 remove-hint" asp-controller="Treaty" asp-action="Index" asp-route-current="@ViewBag.Current" asp-route-leadGovernmentOrganisation="@ViewBag.LeadGovernmentOrganisation" asp-route-seriesMembershipType="@ViewBag.SeriesMembershipType"><span></span>@procedureStep.ProcedureStepName</a>
                                </li>
                            }
                        }
                    </ul>
                </dd>
            }
        </dl>
    </div>
</div>

<section id="content">
    <div class="container">
        <ol class="list--block">
            @foreach (var treaty in treaties.OrderByDescending(x => x.LaidThingHasLaying.FirstOrDefault()?.LayingDate))
            {
                <li>
                    <div class="card">
                        <div class="card__details">
                            <h2>
                                <a asp-controller="Treaty" asp-action="Item" asp-route-id="@treaty.Id">@treaty.TreatyName</a>
                            </h2>
                            <ul class="list--inline">
                                @if (!treaty.WorkPackagedThingHasWorkPackage.WorkPackageHasBusinessItem.Any(businessItem => businessItem.BusinessItemHasProcedureStep.Any(procedureStep => UKParliament.GraphHelper.TreatyProcedureEndStep.Contains(procedureStep.Id))))
                                {
                                    <li>
                                        <a class="hint theme--grey-4" asp-controller="Treaty" asp-action="Index" asp-route-current="true" asp-route-leadGovernmentOrganisation="@ViewBag.LeadGovernmentOrganisation" asp-route-seriesMembershipType="@ViewBag.SeriesMembershipType" asp-route-procedureStep="@ViewBag.ProcedureStep">Currently before Parliament</a>
                                    </li>
                                }
                                @if (@treaty.TreatyHasLeadGovernmentOrganisation != null)
                                {
                                    <li>
                                        <a class="hint theme--grey-4" asp-controller="Treaty" asp-action="Index" asp-route-current="@ViewBag.Current" asp-route-leadGovernmentOrganisation="@treaty.TreatyHasLeadGovernmentOrganisation.Id" asp-route-seriesMembershipType="@ViewBag.SeriesMembershipType" asp-route-procedureStep="@ViewBag.ProcedureStep">@treaty.TreatyHasLeadGovernmentOrganisation.GroupName</a>
                                    </li>
                                }
                                @if (@treaty.TreatyHasCountrySeriesMembership != null)
                                {
                                    <li>
                                        <a class="hint theme--grey-4" asp-controller="Treaty" asp-action="Index" asp-route-current="@ViewBag.Current" asp-route-leadGovernmentOrganisation="@ViewBag.LeadGovernmentOrganisation" asp-route-seriesMembershipType="@treaty.TreatyHasCountrySeriesMembership.GetType().Name" asp-route-procedureStep="@ViewBag.ProcedureStep">Country series</a>
                                    </li>
                                }
                                @if (@treaty.TreatyHasEuropeanUnionSeriesMembership != null)
                                {
                                    <li>
                                        <a class="hint theme--grey-4" asp-controller="Treaty" asp-action="Index" asp-route-current="@ViewBag.Current" asp-route-leadGovernmentOrganisation="@ViewBag.LeadGovernmentOrganisation" asp-route-seriesMembershipType="@treaty.TreatyHasEuropeanUnionSeriesMembership.GetType().Name" asp-route-procedureStep="@ViewBag.ProcedureStep">European Union series</a>
                                    </li>
                                }
                                @if (@treaty.TreatyHasMiscellaneousSeriesMembership != null)
                                {
                                    <li>
                                        <a class="hint theme--grey-4" asp-controller="Treaty" asp-action="Index" asp-route-current="@ViewBag.Current" asp-route-leadGovernmentOrganisation="@ViewBag.LeadGovernmentOrganisation" asp-route-seriesMembershipType="@treaty.TreatyHasMiscellaneousSeriesMembership.GetType().Name" asp-route-procedureStep="@ViewBag.ProcedureStep">Miscellaneous series</a>
                                    </li>
                                }
                                @if (@treaty.WorkPackagedThingHasWorkPackage.WorkPackageHasBusinessItem.Any(businessItem => businessItem.BusinessItemHasProcedureStep.Any(procedureStep => UKParliament.GraphHelper.TreatyProcedureEndStep.Contains(procedureStep.Id))))
                                {
                                    @foreach (var businessItem in @treaty.WorkPackagedThingHasWorkPackage.WorkPackageHasBusinessItem)
                                    {
                                        @foreach (var procedureStep in businessItem.BusinessItemHasProcedureStep)
                                        {
                                            @if (UKParliament.GraphHelper.TreatyProcedureEndStep.Contains(procedureStep.Id))
                                            {
                                                <li>
                                                    <a class="hint theme--grey-4" asp-controller="Treaty" asp-action="Index" asp-route-current="@ViewBag.Current" asp-route-leadGovernmentOrganisation="@ViewBag.LeadGovernmentOrganisation" asp-route-seriesMembershipType="@ViewBag.SeriesMembershipType" asp-route-procedureStep="@procedureStep.Id">@procedureStep.ProcedureStepName</a>
                                                </li>
                                            }
                                        }
                                    }
                                }
                                @if (@treaty.WorkPackagedThingHasWorkPackage.WorkPackageHasBusinessItem.Any(businessItem => businessItem.BusinessItemHasProcedureStep.Any(procedureStep => UKParliament.GraphHelper.TreatyProcedureScheduledDebateStep.Contains(procedureStep.Id))))
                                {
                                    @foreach (var businessItem in @treaty.WorkPackagedThingHasWorkPackage.WorkPackageHasBusinessItem)
                                    {
                                        @foreach (var procedureStep in businessItem.BusinessItemHasProcedureStep)
                                        {
                                            @if (UKParliament.GraphHelper.TreatyProcedureScheduledDebateStep.Contains(procedureStep.Id))
                                            {
                                                <li>
                                                    <a class="hint theme--grey-4" asp-controller="Treaty" asp-action="Index" asp-route-current="@ViewBag.Current" asp-route-leadGovernmentOrganisation="@ViewBag.LeadGovernmentOrganisation" asp-route-seriesMembershipType="@ViewBag.SeriesMembershipType" asp-route-procedureStep="@procedureStep.Id">@procedureStep.ProcedureStepName</a>
                                                </li>
                                            }
                                        }
                                    }
                                }
                                @if (@treaty.WorkPackagedThingHasWorkPackage.WorkPackageHasBusinessItem.Any(businessItem => businessItem.BusinessItemHasProcedureStep.Any(procedureStep => UKParliament.GraphHelper.TreatyProcedureMotionToNotRatifyStep.Contains(procedureStep.Id))))
                                {
                                    @foreach (var businessItem in @treaty.WorkPackagedThingHasWorkPackage.WorkPackageHasBusinessItem)
                                    {
                                        @foreach (var procedureStep in businessItem.BusinessItemHasProcedureStep)
                                        {
                                            @if (UKParliament.GraphHelper.TreatyProcedureMotionToNotRatifyStep.Contains(procedureStep.Id))
                                            {
                                                <li>
                                                    <a class="hint theme--grey-4" asp-controller="Treaty" asp-action="Index" asp-route-current="@ViewBag.Current" asp-route-leadGovernmentOrganisation="@ViewBag.LeadGovernmentOrganisation" asp-route-seriesMembershipType="@ViewBag.SeriesMembershipType" asp-route-procedureStep="@procedureStep.Id">@procedureStep.ProcedureStepName</a>
                                                </li>
                                            }
                                        }
                                    }
                                }
                            </ul>
                            @if (treaty.LaidThingHasLaying.Count() > 0)
                            {
                                <p>Laid @treaty.LaidThingHasLaying.FirstOrDefault()?.LayingDate.ToString("dddd, dd MMMM yyyy")</p>
                            }
                        </div>
                    </div>
                </li>
            }
        </ol>
    </div>
</section>
<script>
    (function () {
        document.getElementById('search').addEventListener('submit', function () {
            Array.prototype.forEach.call(this.elements, function(el) {
                el.disabled = el.value == '';
            });
        }, false);
    })();
</script>